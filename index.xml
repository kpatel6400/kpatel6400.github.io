<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Chris Turner</title>
    <link>/</link>
    <description>Recent content on Chris Turner</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Sun, 09 May 2021 00:00:00 +0000</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Phyton</title>
      <link>/post/2021/05/09/phyton/</link>
      <pubDate>Sun, 09 May 2021 00:00:00 +0000</pubDate>
      
      <guid>/post/2021/05/09/phyton/</guid>
      <description>PYTHON ROCKS
Python is an amazing program since it can be used for many things. One really cool feature about python is its ability to “talk” to R. This will be demonstrated below:
First what you need to do is load the “reticulate” library in R. Next define a word as an object, in this case i’m defining the word “Python” as magic.
library(reticulate) magic&amp;lt;-&amp;quot;Python&amp;quot; Next, do the same but in a python environment.</description>
    </item>
    
    <item>
      <title>Hello R Markdown</title>
      <link>/post/2015/07/23/hello-r-markdown/</link>
      <pubDate>Thu, 23 Jul 2015 21:13:14 -0500</pubDate>
      
      <guid>/post/2015/07/23/hello-r-markdown/</guid>
      <description>R Markdown This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.
You can embed an R code chunk like this:
summary(cars) ## speed dist ## Min. : 4.0 Min. : 2.00 ## 1st Qu.:12.0 1st Qu.: 26.00 ## Median :15.0 Median : 36.00 ## Mean :15.4 Mean : 42.98 ## 3rd Qu.</description>
    </item>
    
    <item>
      <title>Project 1 Kiran</title>
      <link>/project/project1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/project/project1/</guid>
      <description>knitr::opts_chunk$set(echo = TRUE, eval = TRUE, fig.align = &amp;quot;center&amp;quot;, warning = F, message = F, tidy = TRUE, tidy.opts = list(width.cutoff = 60), R.options = list(max.print = 100)) 0: Introduction (5pts) library(readr) hapiscore_whr_2_ &amp;lt;- read_csv(&amp;quot;hapiscore_whr.csv&amp;quot;) murder_total_deaths_2_ &amp;lt;- read_csv(&amp;quot;murder_total_deaths(2).csv&amp;quot;) income_per_person_gdppercapita_ppp_inflation_adjusted_2_ &amp;lt;- read_csv(&amp;quot;income_per_person_gdppercapita_ppp_inflation_adjusted_2.csv&amp;quot;) For this project, I chose three different datasets. These datasets were: a country’s happiness score, the total deaths by murder in each country, and the average income per person in each country.</description>
    </item>
    
    <item>
      <title>Project 2: Modeling, Testing, and Predicting</title>
      <link>/project/project2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/project/project2/</guid>
      <description>0. (5 pts)  library(ggplot2) library(cluster) library(plotROC) library(readr) library(tidyverse) library(MASS) library(glmnet) heartfailure &amp;lt;- read_csv(&amp;quot;heartfailure.csv&amp;quot;) The dataset used in this lab has a total of 14 variables and 299 observations. The main variables used in this lab are platelets, deaths, age, smoking, diabetes, and sodium. The variable “platelets” measured the total count of platelets present in each patient’s blood. The “death” variable signified whether the patient had heart failure. “Yes” means the patient died due to heart failure, while “No” means the patient didn’t have heart failure.</description>
    </item>
    
  </channel>
</rss>
